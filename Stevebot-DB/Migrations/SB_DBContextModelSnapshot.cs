// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Stevebot_DB.Framework_ENT;

#nullable disable

namespace Stevebot_DB.Migrations
{
    [DbContext(typeof(SB_DBContext))]
    partial class SB_DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SB_Content.Payday.PD2.ListObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ExtendedInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasOptional")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OptionalData")
                        .HasColumnType("bit");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ListObjects");
                });

            modelBuilder.Entity("Stevebot_DB.DB_Content.DataLogging", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DataLogs");
                });

            modelBuilder.Entity("Stevebot_DB.DB_Content.HellDiver.API_Objects.Campaign", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("FK_PlanetId")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("type")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("FK_PlanetId");

                    b.ToTable("Campaigns");
                });

            modelBuilder.Entity("Stevebot_DB.DB_Content.HellDiver.API_Objects.Event", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("FK_MessageId")
                        .HasColumnType("int");

                    b.Property<string>("Planets_DB")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("effects")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("race")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("FK_MessageId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Stevebot_DB.DB_Content.HellDiver.API_Objects.JointOperations", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<int>("FK_PlanetId")
                        .HasColumnType("int");

                    b.Property<int>("hq_node_index")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("FK_PlanetId");

                    b.ToTable("JointOperations");
                });

            modelBuilder.Entity("Stevebot_DB.DB_Content.HellDiver.API_Objects.Messages", b =>
                {
                    b.Property<int>("PK_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PK_Id"));

                    b.Property<string>("de")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("en")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("es")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("it")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ru")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("zh")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PK_Id");

                    b.ToTable("messages");
                });

            modelBuilder.Entity("Stevebot_DB.DB_Content.HellDiver.API_Objects.NewsFeedMessage", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<int>("FK_MessageId")
                        .HasColumnType("int");

                    b.Property<string>("published")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("type")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("FK_MessageId");

                    b.ToTable("FeedMessages");
                });

            modelBuilder.Entity("Stevebot_DB.DB_Content.HellDiver.API_Objects.Planet", b =>
                {
                    b.Property<int>("index")
                        .HasColumnType("int");

                    b.Property<int>("FK_Position")
                        .HasColumnType("int");

                    b.Property<bool>("disabled")
                        .HasColumnType("bit");

                    b.Property<float>("hash")
                        .HasColumnType("real");

                    b.Property<string>("initial_owner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("max_health")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("waypoints")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("index");

                    b.HasIndex("FK_Position");

                    b.ToTable("Planets");
                });

            modelBuilder.Entity("Stevebot_DB.DB_Content.HellDiver.API_Objects.PlanetEvent", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("FK_CampaignId")
                        .HasColumnType("int");

                    b.Property<int>("FK_PlanetId")
                        .HasColumnType("int");

                    b.Property<int>("event_type")
                        .HasColumnType("int");

                    b.Property<string>("expire_time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("health")
                        .HasColumnType("int");

                    b.Property<int>("max_health")
                        .HasColumnType("int");

                    b.Property<string>("race")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("start_time")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("FK_CampaignId");

                    b.HasIndex("FK_PlanetId");

                    b.ToTable("PlanetEvents");
                });

            modelBuilder.Entity("Stevebot_DB.DB_Content.HellDiver.API_Objects.PlanetStatus", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("FK_PlanetId")
                        .HasColumnType("int");

                    b.Property<float>("health")
                        .HasColumnType("real");

                    b.Property<float>("liberation")
                        .HasColumnType("real");

                    b.Property<string>("owner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("players")
                        .HasColumnType("real");

                    b.Property<float>("regen_per_second")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.HasIndex("FK_PlanetId");

                    b.ToTable("PlanetStatuses");
                });

            modelBuilder.Entity("Stevebot_DB.DB_Content.HellDiver.API_Objects.Planet_attack", b =>
                {
                    b.Property<int>("PK_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PK_Id"));

                    b.Property<int>("Source")
                        .HasColumnType("int");

                    b.Property<int>("Target")
                        .HasColumnType("int");

                    b.HasKey("PK_Id");

                    b.ToTable("Planet_Attacks");
                });

            modelBuilder.Entity("Stevebot_DB.DB_Content.HellDiver.API_Objects.Position", b =>
                {
                    b.Property<int>("PK_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PK_Id"));

                    b.Property<float>("x")
                        .HasColumnType("real");

                    b.Property<float>("y")
                        .HasColumnType("real");

                    b.HasKey("PK_Id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("Stevebot_DB.DB_Content.HellDiver.API_Objects.WarStatus_DB", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Campaigns_DB")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Global_Events_DB")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Planet_Attacks_DB")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("impact_multiplier")
                        .HasColumnType("real");

                    b.Property<string>("snapshot_at")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("started_at")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("war_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("WarStatus");
                });

            modelBuilder.Entity("Stevebot_DB.DB_Content.HellDiver.API_Objects.Campaign", b =>
                {
                    b.HasOne("Stevebot_DB.DB_Content.HellDiver.API_Objects.Planet", "planet")
                        .WithMany()
                        .HasForeignKey("FK_PlanetId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("planet");
                });

            modelBuilder.Entity("Stevebot_DB.DB_Content.HellDiver.API_Objects.Event", b =>
                {
                    b.HasOne("Stevebot_DB.DB_Content.HellDiver.API_Objects.Messages", "Message")
                        .WithMany()
                        .HasForeignKey("FK_MessageId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Message");
                });

            modelBuilder.Entity("Stevebot_DB.DB_Content.HellDiver.API_Objects.JointOperations", b =>
                {
                    b.HasOne("Stevebot_DB.DB_Content.HellDiver.API_Objects.Planet", "planet")
                        .WithMany()
                        .HasForeignKey("FK_PlanetId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("planet");
                });

            modelBuilder.Entity("Stevebot_DB.DB_Content.HellDiver.API_Objects.NewsFeedMessage", b =>
                {
                    b.HasOne("Stevebot_DB.DB_Content.HellDiver.API_Objects.Messages", "Message")
                        .WithMany()
                        .HasForeignKey("FK_MessageId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Message");
                });

            modelBuilder.Entity("Stevebot_DB.DB_Content.HellDiver.API_Objects.Planet", b =>
                {
                    b.HasOne("Stevebot_DB.DB_Content.HellDiver.API_Objects.Position", "position")
                        .WithMany()
                        .HasForeignKey("FK_Position")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("position");
                });

            modelBuilder.Entity("Stevebot_DB.DB_Content.HellDiver.API_Objects.PlanetEvent", b =>
                {
                    b.HasOne("Stevebot_DB.DB_Content.HellDiver.API_Objects.Campaign", "campaign")
                        .WithMany()
                        .HasForeignKey("FK_CampaignId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Stevebot_DB.DB_Content.HellDiver.API_Objects.Planet", "planet")
                        .WithMany()
                        .HasForeignKey("FK_PlanetId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("campaign");

                    b.Navigation("planet");
                });

            modelBuilder.Entity("Stevebot_DB.DB_Content.HellDiver.API_Objects.PlanetStatus", b =>
                {
                    b.HasOne("Stevebot_DB.DB_Content.HellDiver.API_Objects.Planet", "planet")
                        .WithMany()
                        .HasForeignKey("FK_PlanetId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("planet");
                });
#pragma warning restore 612, 618
        }
    }
}
